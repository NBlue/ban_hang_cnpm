{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    point: 0,\n    error: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n      state.point = action.payload.point;\n    },\n    logoutSuccess: state => {\n      state.isFetching = false;\n      state.currentUser = null;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    setPoint: (state, action) => {\n      state.point = action.payload + state.point;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logoutSuccess,\n  setPoint\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["D:/Dev/banhang/client/src/redux/userRedux.js"],"names":["createSlice","userSlice","name","initialState","currentUser","isFetching","point","error","reducers","loginStart","state","loginSuccess","action","payload","logoutSuccess","loginFailure","setPoint","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE,IADD;AAEZC,IAAAA,UAAU,EAAE,KAFA;AAGZC,IAAAA,KAAK,EAAC,CAHM;AAIZC,IAAAA,KAAK,EAAE;AAJK,GAFc;AAQ5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAGC,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACL,UAAN,GAAmB,IAAnB;AACD,KAHO;AAIRM,IAAAA,YAAY,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC/BF,MAAAA,KAAK,CAACL,UAAN,GAAmB,KAAnB;AACAK,MAAAA,KAAK,CAACN,WAAN,GAAoBQ,MAAM,CAACC,OAA3B;AACAH,MAAAA,KAAK,CAACJ,KAAN,GAAYM,MAAM,CAACC,OAAP,CAAeP,KAA3B;AACD,KARO;AASRQ,IAAAA,aAAa,EAAEJ,KAAD,IAAS;AACrBA,MAAAA,KAAK,CAACL,UAAN,GAAiB,KAAjB;AACAK,MAAAA,KAAK,CAACN,WAAN,GAAkB,IAAlB;AACD,KAZO;AAaRW,IAAAA,YAAY,EAAGL,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACL,UAAN,GAAmB,KAAnB;AACAK,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD,KAhBO;AAiBRS,IAAAA,QAAQ,EAAC,CAACN,KAAD,EAAOE,MAAP,KAAgB;AACvBF,MAAAA,KAAK,CAACJ,KAAN,GAAYM,MAAM,CAACC,OAAP,GAAeH,KAAK,CAACJ,KAAjC;AACD;AAnBO;AARkB,CAAD,CAA7B;AA+BA,OAAO,MAAM;AAAEG,EAAAA,UAAF;AAAcE,EAAAA,YAAd;AAA4BI,EAAAA,YAA5B;AAAyCD,EAAAA,aAAzC;AAAuDE,EAAAA;AAAvD,IAAoEf,SAAS,CAACgB,OAApF;AACP,eAAehB,SAAS,CAACiB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    currentUser: null,\r\n    isFetching: false,\r\n    point:0,\r\n    error: false,\r\n  },\r\n  reducers: {\r\n    loginStart: (state) => {\r\n      state.isFetching = true;\r\n    },\r\n    loginSuccess: (state, action) => {\r\n      state.isFetching = false;\r\n      state.currentUser = action.payload;\r\n      state.point=action.payload.point;\r\n    },\r\n    logoutSuccess:(state)=>{\r\n      state.isFetching=false;\r\n      state.currentUser=null;\r\n    },\r\n    loginFailure: (state) => {\r\n      state.isFetching = false;\r\n      state.error = true;\r\n    },\r\n    setPoint:(state,action)=>{\r\n      state.point=action.payload+state.point;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { loginStart, loginSuccess, loginFailure,logoutSuccess,setPoint } = userSlice.actions;\r\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}